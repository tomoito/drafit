[{"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\App.tsx":"1","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\header\\Header.tsx":"2","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\kokoro-filter\\KokoroFilter.tsx":"3","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\index.tsx":"4","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\fit-kokoro\\FitKokoro.tsx":"5","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\result-status\\ResultStatus.tsx":"6","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\combine-app\\CombineApp.tsx":"7","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\filtered-kokoro\\FilteredKokoro.tsx":"8","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\CustomButton.tsx":"9"},{"size":277,"mtime":1606134439892,"results":"10","hashOfConfig":"11"},{"size":2609,"mtime":1606312280089,"results":"12","hashOfConfig":"13"},{"size":2100,"mtime":1606368797735,"results":"14","hashOfConfig":"15"},{"size":501,"mtime":1606134606622,"results":"16","hashOfConfig":"13"},{"size":116,"mtime":1606218418624,"results":"17","hashOfConfig":"13"},{"size":133,"mtime":1606218418626,"results":"18","hashOfConfig":"13"},{"size":917,"mtime":1606274142957,"results":"19","hashOfConfig":"20"},{"size":139,"mtime":1606218418623,"results":"21","hashOfConfig":"13"},{"size":1074,"mtime":1606369170744,"results":"22","hashOfConfig":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u834sx",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cs5h9y",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"f3is9a",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a5t78v",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\App.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\header\\Header.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\kokoro-filter\\KokoroFilter.tsx",["44","45"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport { Button } from '@material-ui/core';\nimport clsx from 'clsx';\n\nimport CustomButton from '../../components/atom/CustomButton';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'hidden',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  button: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n  buttonBlue: {\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n  },\n}));\n\nconst KokoroFilter:React.FC = () => {\n  const classes = useStyles();\n  const [color, setColor] = useState('default');\n  const handleChange = () => {\n    setColor(color === 'default' ? 'blue' : 'default');\n  };\n\n  const handleChangeBase = (e:any) => {\n    alert(e);\n  };\n\n  return (\n    <div>\n      <p>aiueo</p>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerContainer}>\n          {/* <Divider /> */}\n          <Button\n            className={clsx(classes.button, {\n              [classes.buttonBlue]: color === 'blue',\n            })}\n            onClick={handleChange}\n          >\n            Class name branch\n          </Button>\n          <CustomButton themeColor=\"green\" handleChangeBase={handleChangeBase}>aiueo</CustomButton>\n          <CustomButton themeColor=\"red\" handleChangeBase={handleChangeBase}>aiueo</CustomButton>\n\n        </div>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default KokoroFilter;\n","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\index.tsx",[],["46","47","48","49","50","51"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\fit-kokoro\\FitKokoro.tsx",[],["52","53","54","55","56","57"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\result-status\\ResultStatus.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\combine-app\\CombineApp.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\filtered-kokoro\\FilteredKokoro.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\CustomButton.tsx",[],{"ruleId":"58","severity":1,"message":"59","line":56,"column":31,"nodeType":"60","messageId":"61","endLine":56,"endColumn":34,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":57,"column":5,"nodeType":"65","messageId":"66","endLine":57,"endColumn":13},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"67","replacedBy":"79"},{"ruleId":"69","replacedBy":"80"},{"ruleId":"71","replacedBy":"81"},{"ruleId":"73","replacedBy":"82"},{"ruleId":"75","replacedBy":"83"},{"ruleId":"77","replacedBy":"84"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["85","86"],"no-alert","Unexpected alert.","CallExpression","unexpected","lines-around-directive",["87"],"no-spaced-func",["88"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["87"],["88"],[],[],[],[],{"messageId":"89","fix":"90","desc":"91"},{"messageId":"92","fix":"93","desc":"94"},"padding-line-between-statements","func-call-spacing","suggestUnknown",{"range":"95","text":"96"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"95","text":"97"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[1287,1290],"unknown","never"]