[{"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\App.tsx":"1","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\header\\Header.tsx":"2","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\kokoro-filter\\KokoroFilter.tsx":"3","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\index.tsx":"4","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\fit-kokoro\\FitKokoro.tsx":"5","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\result-status\\ResultStatus.tsx":"6","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\combine-app\\CombineApp.tsx":"7","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\filtered-kokoro\\FilteredKokoro.tsx":"8","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\CustomButton.tsx":"9","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\ColorSection.tsx":"10","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\OrderSection.tsx":"11","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\EffectSection.tsx":"12","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\CustomButtonEffect.tsx":"13","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\ZokuseiSection.tsx":"14","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\KokoroDummy.tsx":"15","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\Kokoro.tsx":"16","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\prot\\Prot.tsx":"17","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\feature\\DraqWalkSlice.ts":"18","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\app\\store.ts":"19","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\FilterFither.tsx":"20","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\fit-kokoro\\TabKind.tsx":"21"},{"size":277,"mtime":1606134439892,"results":"22","hashOfConfig":"23"},{"size":2490,"mtime":1606571906855,"results":"24","hashOfConfig":"25"},{"size":2239,"mtime":1607251875304,"results":"26","hashOfConfig":"25"},{"size":625,"mtime":1606636854219,"results":"27","hashOfConfig":"25"},{"size":7491,"mtime":1607511736546,"results":"28","hashOfConfig":"25"},{"size":1783,"mtime":1607238316105,"results":"29","hashOfConfig":"25"},{"size":2965,"mtime":1607508288740,"results":"30","hashOfConfig":"25"},{"size":2902,"mtime":1607510574016,"results":"31","hashOfConfig":"25"},{"size":1222,"mtime":1606623640764,"results":"32","hashOfConfig":"33"},{"size":3047,"mtime":1606910819445,"results":"34","hashOfConfig":"25"},{"size":1215,"mtime":1606625970389,"results":"35","hashOfConfig":"33"},{"size":3699,"mtime":1607510187667,"results":"36","hashOfConfig":"25"},{"size":1382,"mtime":1606977392251,"results":"37","hashOfConfig":"25"},{"size":3070,"mtime":1607254585069,"results":"38","hashOfConfig":"25"},{"size":282,"mtime":1606517683910,"results":"39","hashOfConfig":"40"},{"size":505,"mtime":1606630620138,"results":"41","hashOfConfig":"33"},{"size":6207,"mtime":1606569903080,"results":"42","hashOfConfig":"40"},{"size":15835,"mtime":1607514316676,"results":"43","hashOfConfig":"25"},{"size":434,"mtime":1606635169544,"results":"44","hashOfConfig":"33"},{"size":1094,"mtime":1607239700327,"results":"45","hashOfConfig":"25"},{"size":1509,"mtime":1607509313224,"results":"46","hashOfConfig":"25"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u834sx",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"glnehh",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fnfgsi",{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"f3is9a",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\App.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\header\\Header.tsx",[],["95","96","97","98","99","100"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\kokoro-filter\\KokoroFilter.tsx",[],["101","102","103","104","105","106"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\index.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\fit-kokoro\\FitKokoro.tsx",["107","108","109","110","111","112","113","114","115","116"],"import React from 'react';\nimport { Box, Grid, Typography } from '@material-ui/core';\n\nimport {\n  selectDoraList, dragStatus, reduceKokoro, filterType, selectKokoroSoubi, selectSoubiData, dragStatusSoubi, filterTypeSoubi, reduceSoubi,\n} from 'feature/DraqWalkSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppDispatch } from 'app/store';\nimport 'react-tabs/style/react-tabs.css';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Kokoro from '../../components/atom/Kokoro';\nimport TabKind from './TabKind';\n\ntype RESULT_KOKORO ={\n  id:number,\n  色:string,\n  name:string,\n  hp:number,\n  mp:number,\n  攻撃力:number,\n  img:string,\n  スキル斬撃:number,\n  メラ斬撃:number,\n  メラ耐性:number,\n  フィルター:string[],\n}\n\ntype kokoroAdd ={\n  id:number\n  kokoroAdd:RESULT_KOKORO\n}\ntype RESULT_SOUBI ={\n  id: number,\n  name:string,\n  hp:number,\n  mp:number,\n  攻撃力:number,\n  img:string,\n  メラ斬撃:number,\n  メラ耐性:number,\n  フィルター:string[]\n}\n\ntype soubiAdd={\n  id:number\n  soubi:RESULT_SOUBI,\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction TabPanel(props: any) {\n  const {\n    children, value, index, ...other\n  } = props;\n\n  return (\n    <div>\n      {value === index && (\n      <div>{children}</div>\n      )}\n    </div>\n  );\n}\n\nconst FitKokoro:React.FC = () => {\n  const DoraList = useSelector(selectDoraList);\n  const dragItem = useSelector(dragStatus);\n  const dragItemSoubi = useSelector(dragStatusSoubi);\n\n  const KokoroSoubi = useSelector(selectKokoroSoubi);\n\n  const SoubiList = useSelector(selectSoubiData);\n\n  const dispatch: AppDispatch = useDispatch();\n\n  const onDroptest = async (e: number) => {\n    const propsAlfa:kokoroAdd = {\n      id: e,\n      kokoroAdd: dragItem,\n    };\n    await dispatch(reduceKokoro(propsAlfa));\n    await dispatch(filterType(propsAlfa));\n  };\n\n  const onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  const onDroptestSoubi = async (e: number) => {\n    const propsAlfa:soubiAdd = {\n      id: e,\n      soubi: dragItemSoubi,\n    };\n\n    await dispatch(reduceSoubi(propsAlfa));\n    await dispatch(filterTypeSoubi(propsAlfa));\n  };\n\n  return (\n    <>\n\n      {/* <TabKind /> */}\n      {/*\n      <TabPanel value={KokoroSoubi} index={0}>\n        Item One\n      </TabPanel>\n\n      <TabPanel value={KokoroSoubi} index={1}>\n        Item two\n      </TabPanel>\n\n      <TabPanel value={KokoroSoubi} index={1}>\n        Item threeee!!!\n      </TabPanel> */}\n      <div>\n        {KokoroSoubi === 0 && ( // こころ装備を表示する\n        <div>\n          <Grid item xs={12}>\n\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptest(1)}>\n                  {\n      DoraList.length > 0\n        ? <Kokoro id={DoraList[0].kokoroAdd.id} name={DoraList[0].kokoroAdd.name} img={DoraList[0].kokoroAdd.img} />\n        : <Kokoro id={0} name=\"blank\" img=\"\" />\n    }\n                </div>\n              </Grid>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptest(2)}>\n                  {\n      DoraList.length > 1\n        ? <Kokoro id={DoraList[1].kokoroAdd.id} name={DoraList[1].kokoroAdd.name} img={DoraList[1].kokoroAdd.img} />\n        : <Kokoro id={1} name=\"blank\" img=\"\" />\n    }\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptest(3)}>\n                  {\n      DoraList.length > 2\n        ? <Kokoro id={DoraList[2].kokoroAdd.id} name={DoraList[2].kokoroAdd.name} img={DoraList[2].kokoroAdd.img} />\n        : <Kokoro id={2} name=\"blank\" img=\"\" />\n    }\n                </div>\n              </Grid>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptest(4)}>\n                  {\n      DoraList.length > 3\n        ? <Kokoro id={DoraList[3].kokoroAdd.id} name={DoraList[3].kokoroAdd.name} img={DoraList[3].kokoroAdd.img} />\n        : <Kokoro id={3} name=\"blank\" img=\"\" />\n    }\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n        )}\n      </div>\n\n      <div>\n        {KokoroSoubi === 1 && ( // 装備を表示する\n        <div>\n\n          <Grid item xs={12}>\n\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptestSoubi(1)}>\n                  {\n                  DoraList.length > 0\n                    ? <Kokoro id={SoubiList[0].soubi.id} name={SoubiList[0].soubi.name} img={SoubiList[0].soubi.img} />\n                    : <Kokoro id={0} name=\"blank\" img=\"\" />\n                  }\n                </div>\n              </Grid>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptestSoubi(2)}>\n                  {\n                  DoraList.length > 1\n                    ? <Kokoro id={SoubiList[1].soubi.id} name={SoubiList[1].soubi.name} img={SoubiList[1].soubi.img} />\n                    : <Kokoro id={1} name=\"blank\" img=\"\" />\n                    }\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptestSoubi(3)}>\n                  {\n                  DoraList.length > 2\n                    ? <Kokoro id={SoubiList[2].soubi.id} name={SoubiList[2].soubi.name} img={SoubiList[2].soubi.img} />\n                    : <Kokoro id={2} name=\"blank\" img=\"\" />\n                  }\n                </div>\n              </Grid>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptestSoubi(4)}>\n                  {\n                  DoraList.length > 3\n                    ? <Kokoro id={SoubiList[3].soubi.id} name={SoubiList[3].soubi.name} img={SoubiList[3].soubi.img} />\n                    : <Kokoro id={3} name=\"blank\" img=\"\" />\n                  }\n                </div>\n              </Grid>\n            </Grid>\n\n          </Grid>\n\n          <Grid item xs={12}>\n            <Grid container justify=\"center\" spacing={2}>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptestSoubi(5)}>\n                  {\n                  DoraList.length > 2\n                    ? <Kokoro id={SoubiList[4].soubi.id} name={SoubiList[4].soubi.name} img={SoubiList[4].soubi.img} />\n                    : <Kokoro id={2} name=\"blank\" img=\"\" />\n                  }\n                </div>\n              </Grid>\n              <Grid item>\n                <div onDragOver={onDragOver} onDrop={() => onDroptestSoubi(6)}>\n                  {\n                  DoraList.length > 3\n                    ? <Kokoro id={SoubiList[5].soubi.id} name={SoubiList[5].soubi.name} img={SoubiList[5].soubi.img} />\n                    : <Kokoro id={3} name=\"blank\" img=\"\" />\n                  }\n                </div>\n              </Grid>\n            </Grid>\n\n          </Grid>\n\n        </div>\n        )}\n      </div>\n\n    </>\n  );\n};\n\nexport default FitKokoro;\n","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\result-status\\ResultStatus.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\combine-app\\CombineApp.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\filtered-kokoro\\FilteredKokoro.tsx",["117"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\CustomButton.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\ColorSection.tsx",["118"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Grid, Typography,\n} from '@material-ui/core';\n\nimport {\n  colorFilterRed, colorFilterBlue, colorFilterGreen, colorFilterPurple, FlterResult,\n} from 'feature/DraqWalkSlice';\nimport { AppDispatch } from 'app/store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CustomButton from '../atom/CustomButton';\n// colorFilterRed,colorFilterBlue,colorFilterGreen,colorFilterPurple\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'hidden',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  button: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n  buttonBlue: {\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n  },\n  colorText: {\n    textAlign: 'left',\n    fontSize: '20px',\n  },\n}));\n\nconst ColorSection:React.FC = () => {\n  const classes = useStyles();\n  const dispatch: AppDispatch = useDispatch();\n  const handleChangeBase = async(e:any) => {// eslint-disable-line\n    // alert(e);\n    if (e === '赤') {\n      await dispatch(colorFilterRed());\n      // await dispatch(FlterResult());\n    }\n\n    if (e === '青') {\n      await dispatch(colorFilterBlue());\n      // await dispatch(FlterResult());\n    }\n    if (e === '緑') {\n      await dispatch(colorFilterGreen());\n      // await dispatch(FlterResult());\n    }\n    if (e === '紫') {\n      await dispatch(colorFilterPurple());\n      // await dispatch(FlterResult());\n    }\n    await dispatch(FlterResult());\n\n    // alert(e);\n  };\n  return (\n    <div>\n      <Typography className={classes.colorText}>Color</Typography>\n      <Grid container>\n        <Grid item xs={3}>\n          <CustomButton themeColor=\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\" handleChangeBase={() => handleChangeBase('赤')} dispShow=\"○\">aiueo</CustomButton>\n        </Grid>\n        <Grid item xs={3}>\n          <CustomButton themeColor=\"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\" handleChangeBase={() => handleChangeBase('青')} dispShow=\"○\">aiueo</CustomButton>\n        </Grid>\n        <Grid item xs={3}>\n          <CustomButton themeColor=\"linear-gradient(45deg, #AED581 30%, #7CB342 90%)\" handleChangeBase={() => handleChangeBase('緑')} dispShow=\"○\">aiueo</CustomButton>\n        </Grid>\n        <Grid item xs={3}>\n          <CustomButton themeColor=\"linear-gradient(45deg, #9575CD 30%, #7E57C2 90%)\" handleChangeBase={() => handleChangeBase('紫')} dispShow=\"○\">aiueo</CustomButton>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ColorSection;\n","C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\OrderSection.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\EffectSection.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\CustomButtonEffect.tsx",["119"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\ZokuseiSection.tsx",["120"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\KokoroDummy.tsx",["121"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\atom\\Kokoro.tsx",[],["122","123","124","125","126","127"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\prot\\Prot.tsx",["128"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\feature\\DraqWalkSlice.ts",["129","130"],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\app\\store.ts",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\components\\block\\FilterFither.tsx",[],"C:\\Users\\tomoito\\Documents\\work\\draqwalk\\src\\pages\\fit-kokoro\\TabKind.tsx",["131","132","133"],"import React from 'react';\nimport 'react-tabs/style/react-tabs.css';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {\n  setKirikae,\n} from 'feature/DraqWalkSlice';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'app/store';\nimport { Button } from '@material-ui/core';\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    textAlign: 'center',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst TabKind:React.FC = () => {\n  const classes = useStyles();\n\n  const dispatch: AppDispatch = useDispatch();\n\n  const [value, setValue] = React.useState(0);\n  const handleChange = async (event: React.ChangeEvent<unknown>, newValue: number) => {\n    setValue(newValue);\n    await dispatch(setKirikae(newValue));\n  };\n  return (\n    <div>\n      <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" className={classes.root}>\n        <Tab label=\"こころ( ﾟДﾟ)\" className={classes.root} />\n        <Tab label=\"装備( ﾟДﾟ)\" className={classes.root} />\n        <Tab label=\"心珠\" className={classes.root} />\n      </Tabs>\n\n    </div>\n  );\n};\n\nexport default TabKind;\n",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"134","replacedBy":"146"},{"ruleId":"136","replacedBy":"147"},{"ruleId":"138","replacedBy":"148"},{"ruleId":"140","replacedBy":"149"},{"ruleId":"142","replacedBy":"150"},{"ruleId":"144","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},{"ruleId":"152","severity":1,"message":"156","line":2,"column":21,"nodeType":"154","messageId":"155","endLine":2,"endColumn":31},{"ruleId":"152","severity":1,"message":"157","line":10,"column":8,"nodeType":"154","messageId":"155","endLine":10,"endColumn":12},{"ruleId":"152","severity":1,"message":"158","line":11,"column":8,"nodeType":"154","messageId":"155","endLine":11,"endColumn":11},{"ruleId":"152","severity":1,"message":"159","line":14,"column":8,"nodeType":"154","messageId":"155","endLine":14,"endColumn":15},{"ruleId":"152","severity":1,"message":"160","line":51,"column":10,"nodeType":"154","messageId":"155","endLine":51,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":51,"column":27,"nodeType":"163","messageId":"164","endLine":51,"endColumn":30,"suggestions":"165"},{"ruleId":"152","severity":1,"message":"166","line":58,"column":10,"nodeType":"154","messageId":"155","endLine":58,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":58,"column":26,"nodeType":"163","messageId":"164","endLine":58,"endColumn":29,"suggestions":"167"},{"ruleId":"152","severity":1,"message":"168","line":60,"column":32,"nodeType":"154","messageId":"155","endLine":60,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":55,"column":5,"nodeType":"171","messageId":"172","endLine":55,"endColumn":16},{"ruleId":"152","severity":1,"message":"173","line":12,"column":23,"nodeType":"154","messageId":"155","endLine":12,"endColumn":34},{"ruleId":"152","severity":1,"message":"174","line":36,"column":23,"nodeType":"154","messageId":"155","endLine":36,"endColumn":37},{"ruleId":"161","severity":1,"message":"162","line":23,"column":37,"nodeType":"163","messageId":"164","endLine":23,"endColumn":40,"suggestions":"175"},{"ruleId":"152","severity":1,"message":"176","line":5,"column":9,"nodeType":"154","messageId":"155","endLine":5,"endColumn":10},{"ruleId":"134","replacedBy":"177"},{"ruleId":"136","replacedBy":"178"},{"ruleId":"138","replacedBy":"179"},{"ruleId":"140","replacedBy":"180"},{"ruleId":"142","replacedBy":"181"},{"ruleId":"144","replacedBy":"182"},{"ruleId":"152","severity":1,"message":"153","line":15,"column":10,"nodeType":"154","messageId":"155","endLine":15,"endColumn":13},{"ruleId":"152","severity":1,"message":"183","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":18},{"ruleId":"152","severity":1,"message":"184","line":13,"column":8,"nodeType":"154","messageId":"155","endLine":13,"endColumn":21},{"ruleId":"152","severity":1,"message":"185","line":12,"column":10,"nodeType":"154","messageId":"155","endLine":12,"endColumn":16},{"ruleId":"152","severity":1,"message":"160","line":14,"column":10,"nodeType":"154","messageId":"155","endLine":14,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":14,"column":27,"nodeType":"163","messageId":"164","endLine":14,"endColumn":30,"suggestions":"186"},"lines-around-directive",["187"],"no-spaced-func",["188"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["187"],["188"],[],[],[],[],"@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'TabKind' is defined but never used.","'a11yProps' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["189","190"],"'TabPanel' is defined but never used.",["191","192"],"'other' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'useSelector' is defined but never used.","'setColorSilver' is assigned a value but never used.",["193","194"],"'x' is assigned a value but never used.",["187"],["188"],[],[],[],[],"'kokorowaku' is defined but never used.","'blueGreenWaku' is defined but never used.","'Button' is defined but never used.",["195","196"],"padding-line-between-statements","func-call-spacing",{"messageId":"197","fix":"198","desc":"199"},{"messageId":"200","fix":"201","desc":"202"},{"messageId":"197","fix":"203","desc":"199"},{"messageId":"200","fix":"204","desc":"202"},{"messageId":"197","fix":"205","desc":"199"},{"messageId":"200","fix":"206","desc":"202"},{"messageId":"197","fix":"207","desc":"199"},{"messageId":"200","fix":"208","desc":"202"},"suggestUnknown",{"range":"209","text":"210"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"209","text":"211"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"212","text":"210"},{"range":"212","text":"211"},{"range":"213","text":"210"},{"range":"213","text":"211"},{"range":"214","text":"210"},{"range":"214","text":"211"},[1050,1053],"unknown","never",[1181,1184],[646,649],[440,443]]